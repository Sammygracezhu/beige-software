<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoft</title>
   </properties>

  <body>

    <section name="Install Debian">
      
      <p>
        1. Get first unstable DVD(amd64) from <a href="https://www.debian.org/">debian.org</a><br></br>
        Right now Jessie has obsolete software. For example Network Manager(0.9.10.0-7) can make neither DSL connection nor WIFI Hotspot.
        I recommend Stretch. Despite of it contains too new software it works stable. 32 bit software are going to be obsolete.
      </p>
      <p>
        2. Burn DVD, or better copy it into flash. In Linux make sure what is your USB drive name (sdb or sdc). In root terminal type "df" to list mounted devices. Hard drive is always "/dev/sda".
        Insert USB flash and list devices again. USB flash usually appears as "dev/sdb". Unmount flash e.g. "umount /dev/sdb1" then "sync".
        Copy ISO image into flash with "cp debian-testing-amd64-DVD-1.iso /dev/sdb".
      </p>
      <p>  
        3. Boot from DVD/USB-flash. Choose "Install" (text mode). Install Debian with default options.
        In case you have important information on disc or other operation system you have to manually make disc partitions.
        Choose XFCE desktop environment.
      </p>
      
      <h4>First start after installation.</h4>
      <p>
        1. Add into source list current Debian repositories according <a href="https://wiki.debian.org/SourcesList">wiki.debian.org/SourcesList</a>.
        I.e. type "nano /etc/apt/sources.list" and add for stretch distributive:
        <pre>
          deb http://httpredir.debian.org/debian stretch main contrib
          deb-src http://httpredir.debian.org/debian stretch main contrib
          deb http://httpredir.debian.org/debian stretch-updates main contrib
          deb-src http://httpredir.debian.org/debian stretch-updates main contrib          
          deb http://security.debian.org/ stretch/updates main contrib
          deb-src http://security.debian.org/ stretch/updates main contrib
        </pre>
        "apt-get update" will refresh data from changed source.list.
      </p>
      <p>
        In case you have no decent internet connection add ISO DVD into source list:
        <ol>
          <li>Create dir for ISO file: "mkdir /debiandvd"</li>
          <li>Copy ISO from flash (see above about name of flash): "dd if=/dev/sdb of=/debiandvd/dvddeb.iso"</li>
          <li>Create dir for mount: "mkdir /mnt/dvddeb"</li>
          <li>Mount ISO: "mount -o loop /debiandvd/dvddeb.iso /mnt/dvddeb"</li>
          <li>Add ISO entry to source list: "deb file:/mnt/dvddeb/ stretch main contrib"</li>
          <li>To mount it at startup add entry "/mnt/dvddeb/dvddeb.iso /mnt/dvddeb/mnt udf,iso9660 user,auto,loop 0 0" into "nano /etc/fstab"</li>
        </ol>
        Use "--allow-unauthenticated" in apt-get command for installation from this source.
      </p>
      <p>
        You might need to change timezone / locales / keyboard after installation.
        In root console type "dpkg-reconfigure tzdata" to change timezone (use same for "locales").
        After adding locale add it into keyboard configuration - "nano /etc/default/keyboard" and edit it like this:
        <pre>
# KEYBOARD CONFIGURATION FILE

# Consult the keyboard(5) manual page.

XKBMODEL="pc105"
XKBLAYOUT="us,ru"
XKBVARIANT=""
XKBOPTIONS="grp:alt_shift_toggle"

BACKSPACE="guess"
        </pre>
        To apply new keyboard settings without restarting run:<br></br>
        service keyboard-setup restart<br></br>
        or<br></br>
        udevadm trigger --subsystem-match=input --action=change
      </p>
      
    </section>
    
    <section name="XFCE Desktop">
      
      <p>XFCE is user friendly and stable Linux desktop. It has traditional hierarchical menu, task panel, icon tray, pretty rendering fonts. 
      </p>
        
      <h4>Change look:</h4>
      <p>Applications Menu - Settings - Settings Manager and then choose Appearance, switch to "Font" tab and choose "Enable hinting" to "medium".
      </p>
      
      <h4>Add applications:</h4>
      <p>Install if you prefer follow applications from command line use "apt-get install [app-name]":
        <ul>
          <li>mc - console file manager.</li>
          <li>PCManFM - file manager, and set it as default in the Settings.</li>
          <li><a href="debiangpg.html">GPG agent, if you want to sign many files without have been asked passphrase for many times.</a></li>
        </ul>
        To install any deb-package type in root terminal "dpkg -i [file-name.deb]" then "apt-get -f install" in case unresolved dependences.
      </p>

      <h4>Other:</h4>
      
      <p>Fix problem that xscreensaver can't show Caps Lock status and keyboard layout:
        <ul>
          <li>apt-get purge xscreensaver</li>
          <li>get xsecurelock source from <a href="https://github.com/google/xsecurelock">https://github.com/google/xsecurelock</a></li>
          <li>add header <b>#include &lt;X11/XKBlib.h&gt;</b> and change function <b>display_string</b> in file <b>helpers/auth_pam_x11.c</b> like this:
      <pre>
  ...
  if (region_w == 0 || region_h == 0) {
    XClearWindow(display, window);
  }

  <b>//Reveal current keyboard ledmask and layout:
  XKeyboardState xkbs;
  XGetKeyboardControl(display, &amp;xkbs);
  char ledMaskStr[43];
  ledMaskStr[0] = 'L';
  ledMaskStr[1] = 'e';
  ledMaskStr[2] = 'd';
  ledMaskStr[3] = ' ';
  ledMaskStr[4] = 'm';
  ledMaskStr[5] = 'a';
  ledMaskStr[6] = 's';
  ledMaskStr[7] = 'k';
  ledMaskStr[8] = ':';
  ledMaskStr[9] = ' ';
  ledMaskStr[42] = '\0';
  unsigned long unsLngMsk = 0x80000000ul;
  for (int i = 10; i &lt; 42; i++) {
    ledMaskStr[i] = ((xkbs.led_mask &amp; unsLngMsk) == unsLngMsk) ? '1' : '0';
    unsLngMsk &gt;&gt;= 1;
  }
  int lenLedMaskStr = 42;
  int twLedMaskStr = XTextWidth(font, ledMaskStr, lenLedMaskStr);
  XkbDescRec* kbdDescPtr = XkbAllocKeyboard();
  XkbGetControls(display, XkbAllControlsMask, kbdDescPtr);
  XkbGetNames(display, XkbSymbolsNameMask, kbdDescPtr);
  XkbGetNames(display, XkbGroupNamesMask, kbdDescPtr);
  XkbStateRec xkbState;
  XkbGetState(display, XkbUseCoreKbd, &amp;xkbState);
  int currentGroupNum = xkbState.group;
  const Atom* groupSource = kbdDescPtr-&gt;names-&gt;groups;
  char kbrLayoutStr[] = "Layout: ";
  Atom curGroupAtom = groupSource[currentGroupNum];
  strcat(kbrLayoutStr, XGetAtomName(display, curGroupAtom));
  int lenKbrLayoutStr = strlen(kbrLayoutStr);
  int twKbrLayoutStr = XTextWidth(font, kbrLayoutStr, lenKbrLayoutStr);</b>
  
  int i;
  for (i = 0; i &lt; screens; ++i) {
    int cx = (w * i) / screens + (w / screens) / 2;
    int cy = h / 2;

    // Clear the region last written to.
    if (region_w != 0 &amp;&amp; region_h != 0) {
      XClearArea(display, window, cx + region_x, cy + region_y, region_w,
                 region_h, False);
    }

    <b>//Print keyboard ledmask
    XDrawString(display, window, gc, cx - twLedMaskStr / 2,
                cy - font-&gt;max_bounds.descent - 40, ledMaskStr, lenLedMaskStr);

    //Print keyboard layout
    XDrawString(display, window, gc, cx - twKbrLayoutStr / 2,
                cy - font-&gt;max_bounds.descent - 24, kbrLayoutStr, lenKbrLayoutStr);</b>

    XDrawString(display, window, gc, cx - tw_title / 2,
                cy - font-&gt;max_bounds.descent - 8, title, len_title);

    XDrawString(display, window, gc, cx - tw_str / 2,
                cy + font-&gt;max_bounds.ascent + 8, str, len_str);
  }

  // Remember the region we just wrote to, relative to cx and cy.
  <b>if (twLedMaskStr &gt; tw_str) {//Clear also keyboard ledmask and layout
    region_x = -twLedMaskStr / 2;
    region_w = twLedMaskStr;
  } else {
    region_x = -tw_str / 2;
    region_w = tw_str;
  }
  region_y = -font-&gt;max_bounds.descent - 40 - font-&gt;max_bounds.ascent;//Clear also keyboard ledmask and layout -8 -&gt; -40
  region_h = 4 * (font-&gt;max_bounds.ascent + font-&gt;max_bounds.descent + 8);//Clear also keyboard ledmask and layout 2* -&gt; 4*
  </b>
  ...
      </pre>
          </li>
          <li>install xsecurelock dependencies exclude xscreensaver</li>
          <li>install xsecurelock from source
<pre>
  ./configure --with-pam-service-name=common-auth
  make
  make install
</pre>
          </li>
          <li>apt-get install xss-lock, it will invokes xsecurelock on events like suspend</li>
          <li>Create file [home]/script/xsslock.sh, add entries:
            <pre>
#!/bin/bash
xss-lock xsecurelock auth_pam_x11 saver_blank
            </pre>
          </li>
          <li>Open Applications Menu - Settings - Settings Manager and then choose the Session and Startup option and click the tab Application Autostart, add this script</li>
          <li>Open Applications Menu - Settings - Power Manager and set right settings.</li>
        </ul>
      </p>
      
      <p>To resize/move a window when its head is "gone away" press Alt-Space - icon menu for manipulate this window will appeared.</p>
      
      <p>
        Add into .bashrc entry "export HISTCONTROL=ignoreboth:erasedups" to avoid duplications in command line history.
      </p>
    
      <h4>Add/edit menu:</h4>
      <p>
        Open file manager and go to location "/usr/share/applications". You can open read only any .desktop link with leafpad. To edit/add click menu "Tools - Open current folder in terminal".
        Type "su" and root password. For example create link for Eclipse by typing "leafpad eclipse-jee-kepler-SR2.desktop" then add these entries:
        <pre>
[Desktop Entry]
Name=eclipse-jee-kepler-SR2
Icon=/home/yury/programmer/java/eclipse-jee-kepler-SR2/icon.xpm
Exec=/home/yury/programmer/java/eclipse-jee-kepler-SR2/eclipse
Type=Application
Terminal=false
Categories=GTK;Development;IDE;
        </pre> 
      </p>
      
    </section>
    
  </body>

</document>
